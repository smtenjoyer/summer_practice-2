# Имя рабочего процесса, отображаемое на GitHub Actions
name: Build and Test Qt Project on Linux (Docker Image)

# События, которые запускают этот рабочий процесс
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# Определяем задачи (jobs)
jobs:
  build_linux:
    # Обязательно указываем, на каком раннере будет запущен контейнер
    runs-on: ubuntu-latest # <--- ЭТА СТРОКА БЫЛА ОТСУТСТВУЮЩЕЙ!
    
    # Указываем Docker-образ, в котором будут выполняться шаги
    container: ubuntu:22.04 # Используем стабильный образ Ubuntu 22.04 LTS (Jammy Jellyfish)

    # Шаги, которые будут выполняться
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Install Qt and Build Tools (inside Docker)
      run: |
        echo "Updating apt packages..."
        apt update -y 
        
        echo "Installing build essentials and Qt5 libraries for Ubuntu 22.04..."
        apt install -y build-essential qt5-qmake libqt5core5-dev libqt5gui5-dev libqt5widgets5-dev libqt5network5-dev libgl1-mesa-dev

        echo "Installed Qt and build tools."
    
    - name: Configure Qt Projects
      run: |
        echo "Configuring server project..."
        cd server
        qmake server.pro
        cd ..

        echo "Configuring client project..."
        cd client
        qmake client.pro
        cd ..

    - name: Build Server
      run: |
        echo "Building server..."
        cd server
        make -j$(nproc)
        mv server ../server_app
        cd ..

    - name: Build Client
      run: |
        echo "Building client..."
        cd client
        make -j$(nproc)
        mv client ../client_app
        cd ..

    - name: Verify Executables
      run: |
        echo "Verifying compiled executables..."
        ls -l
        if [ -f server_app ]; then
          echo "Server application (server_app) found."
        else
          echo "Server application (server_app) NOT found!"
          exit 1
        fi
        if [ -f client_app ]; then
          echo "Client application (client_app) found."
        else
          echo "Client application (client_app) NOT found!"
          exit 1
        fi

    # - name: Run Basic Test (Optional)
    #   run: |
    #     echo "Attempting to run server and client..."
    #     ./server_app &
    #     SERVER_PID=$!
    #     sleep 2
    #     ./client_app "testuser" || true
    #     sleep 1
    #     kill $SERVER_PID || true
    #     echo "Server stopped."

    - name: Upload Build Artifacts (Optional)
      uses: actions/upload-artifact@v4
      with:
        name: Qt_Apps_Linux_Build
        path: |
          ./client_app
          ./server_app